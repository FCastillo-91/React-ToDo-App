{"version":3,"sources":["Header.js","AddNewTaskForm.js","ToDoListHeader.js","Task.js","DoneList.js","App.js","index.js"],"names":["Header","className","React","Component","NewTask","props","updateTaskName","event","setState","taskName","target","value","updateDate","dueDate","updateUrgency","urgency","checked","addTask","state","alert","addNewTaskFunc","id","taskForm","name","this","type","onChange","placeholder","hfor","onClick","ToDoListHeader","status","numOfTasks","updateNumOfTasks","count","Task","taskDone","taskCompletedFunc","task","taskDelete","taskDeletedFunc","taskEdit","taskEditFunc","DoneList","mytask","completedTasks","map","key","App","addNewTask","date","myTaskList","taskList","newTask","done","uuid","isEditing","copyOfTasks","slice","push","resetForm","console","log","forEach","getTodaydate","completedTask","taskCompleted","deleteTask","filteredTasks","filter","editTask","updateTask","today","Date","todayNum","getDate","getFullYear","getMonth","bind","pendingTasks","AddNewTaskForm","length","ReactDOM","render","document","getElementById"],"mappings":"wWAeeA,G,uLAVP,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,wGACA,uBAAGA,UAAU,eAAb,mB,GANKC,IAAMC,YCuFZC,E,YAvFX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAiBVC,eAAiB,SAACC,GACd,EAAKC,SAAS,CACVC,SAAUF,EAAMG,OAAOC,SApBZ,EAwBnBC,WAAa,SAACL,GACV,EAAKC,SAAS,CACVK,QAASN,EAAMG,OAAOC,SA1BX,EA8BnBG,cAAgB,SAACP,GACb,EAAKC,SAAS,CACVO,QAASR,EAAMG,OAAOM,WAhCX,EAoCnBC,QAAU,WACN,MAA4B,KAAxB,EAAKC,MAAMT,SACJU,MAAO,mBAES,KAAvB,EAAKD,MAAML,QACJM,MAAO,sCAGlB,EAAKd,MAAMe,eACP,EAAKF,MAAMT,SACX,EAAKS,MAAML,QACX,EAAKK,MAAMH,QACX,EAAKG,MAAMG,KA9Cf,EAAKH,MAAQ,CACTT,SAAUJ,EAAMiB,SAASC,KACzBV,QAASR,EAAMiB,SAAST,QACxBE,QAASV,EAAMiB,SAASP,QACxBM,GAAIhB,EAAMiB,SAASD,IANR,E,uFAUOhB,GACtBmB,KAAKhB,SAAS,CACVC,SAAUJ,EAAMiB,SAASC,KACzBV,QAASR,EAAMiB,SAAST,QACxBE,QAASV,EAAMiB,SAASP,QACxBM,GAAIhB,EAAMiB,SAASD,O,+BAsCvB,OACI,yBAAKpB,UAAU,OACX,yBAAKA,UAAU,wBACX,2BAAOwB,KAAK,OAAOC,SAAUF,KAAKlB,eAAgBK,MAAOa,KAAKN,MAAMT,SAAUR,UAAU,eAAe0B,YAAY,qBAEvH,yBAAK1B,UAAU,uBACX,2BAAOwB,KAAK,OAAOC,SAAUF,KAAKZ,WAAYD,MAAOa,KAAKN,MAAML,QAASZ,UAAU,kBAEvF,yBAAKA,UAAU,uBACX,2BACIwB,KAAK,WACLC,SAAUF,KAAKV,cACfb,UAAU,mBACVoB,GAAG,cACHE,KAAK,cACLP,QAASQ,KAAKN,MAAMH,UAExB,2BAAOd,UAAU,mBAAmB2B,KAAK,eAAzC,cAEJ,yBAAK3B,UAAU,wBACX,4BAAQ4B,QAASL,KAAKP,QACtBhB,UACqB,OAAjBuB,KAAKN,MAAMG,GAAa,4BAA8B,6BAGpC,OAAjBG,KAAKN,MAAMG,GAAa,SAAW,a,GA/EtCnB,IAAMC,WCuBb2B,E,2MAtBXZ,MAAQ,CACJa,OAAQ,gBACRC,WAAY,I,EAGhBC,iBAAmB,SAAC1B,GAChB,EAAKC,SAAS,CACVwB,WAAYzB,EAAMG,OAAOC,S,wEAK7B,OACI,yBAAKV,UAAU,mCACX,yBAAKA,UAAU,aACP,0CAAe,0BAAMA,UAAU,8CAA8CuB,KAAKnB,MAAM6B,c,GAhBnFhC,IAAMC,WCmEpBgC,G,iNAhEXC,SAAW,WAER,EAAK/B,MAAMgC,kBACP,EAAKhC,MAAMiC,KAAKjB,K,EAIvBkB,WAAa,WAET,EAAKlC,MAAMmC,gBACP,EAAKnC,MAAMiC,KAAKjB,K,EAIxBoB,SAAW,WAEP,EAAKpC,MAAMqC,aACP,EAAKrC,MAAMiC,KAAKjB,K,wEAKpB,OACI,6BACI,yBAAKpB,UAAU,mCACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBACV,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,uBACVuB,KAAKnB,MAAMiC,KAAKvB,SACjB,0BAAMd,UAAU,iBAAgB,uBAAGA,UAAU,iBAE5CuB,KAAKnB,MAAMiC,KAAKf,MAErB,yBAAKtB,UAAU,uBACVuB,KAAKnB,MAAMiC,KAAKzB,SAErB,yBAAKZ,UAAU,mBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,SACX,4BAAQwB,KAAK,SAASI,QAASL,KAAKY,SAChCnC,UAAU,0CADd,SAGJ,yBAAKA,UAAU,SACX,4BAAQwB,KAAK,SAASI,QAASL,KAAKiB,SAChCxC,UAAU,4CADd,SAGJ,yBAAKA,UAAU,SACX,4BAAQwB,KAAK,SAASI,QAASL,KAAKe,WAChCtC,UAAU,yCADd,uB,GAnD7BC,IAAMC,YCsBVwC,E,iLArBP,IAAMC,EAASpB,KAAKnB,MAAMwC,eAE1B,OACQ,yBAAK5C,UAAU,mCACX,yBAAKA,UAAU,aACX,yCACA,wBAAIA,UAAU,wBACT2C,EAAOE,KAAI,SAACR,GACT,OACI,wBAAIS,IAAKT,EAAKjB,GACdpB,UAAU,mBACTqC,EAAKf,gB,GAbnBrB,IAAMC,WCyKd6C,G,kBAhKb,aAAc,IAAD,8BACX,+CAcFC,WAAa,SAAC1B,EAAM2B,EAAMnC,EAASM,GACjC,IAAM8B,EAAa,EAAKjC,MAAMkC,SAExBC,EAAU,CACd9B,KAAMA,EACNV,QAASqC,EACTI,MAAM,EACNvC,QAASA,EACTM,GAAY,OAAPA,EAAekC,MAASlC,EAC7BmC,WAAW,GAGb,GAAU,OAAPnC,EAAY,CACb,IAAMoC,EAAcN,EACpBM,EAAYC,QAEZD,EAAYE,KAAKN,GACjB,EAAK7C,SAAS,CACZ4C,SAAUK,IAEZ,EAAKG,iBAGHC,QAAQC,IAAIX,GACdA,EAAWY,SAAQ,SAASzB,GAEvBA,EAAKjB,KAAOA,IACbiB,EAAKf,KAAO8B,EAAQ9B,KACpBe,EAAKkB,WAAY,EACjBlB,EAAKY,KAAOG,EAAQH,KACpBZ,EAAKvB,QAAUsC,EAAQtC,YAG3B,EAAKP,SAAS,CACZ4C,SAAUD,IAEZ,EAAKS,aAnDI,EAuDbA,UAAY,WACV,IAAMtC,EAAW,CACfC,KAAM,GACNV,QAAS,EAAKmD,eACdjD,SAAS,EACTM,GAAI,MAEN,EAAKb,SAAS,CACZc,SAAUA,KA/DD,EAmEb2C,cAAgB,SAAC5C,GACf,IAAM6C,EAAgB,EAAKhD,MAAMkC,SAEjCc,EAAcH,SAAQ,SAAAzB,GACpB,GAAIA,EAAKjB,KAAOA,EAAI,OAAOiB,EAAKgB,MAAO,KAGzC,EAAK9C,SAAS,CACZ4C,SAAUc,KA3ED,EA+EbC,WAAa,SAAC9C,GACZ,IACM+C,EADa,EAAKlD,MAAMkC,SACGiB,QAAO,SAAA/B,GACtC,OAAIA,EAAKjB,KAAOA,KAIlB,EAAKb,SAAS,CACZ4C,SAAUgB,KAvFD,EA2FbE,SAAW,SAACjD,GACV,IAEIkD,EAFEpB,EAAa,EAAKjC,MAAMkC,SAG9BD,EAAWY,SAAQ,SAAAzB,GACbA,EAAKjB,KAAOA,IACdiB,EAAKkB,WAAY,EACjBe,EAAa,CACXhD,KAAMe,EAAKf,KACXV,QAASyB,EAAKzB,QACdE,QAASuB,EAAKvB,QACdM,GAAIiB,EAAKjB,QAKf,EAAKb,SAAS,CACZc,SAAUiD,EACVnB,SAAUD,KA7GD,EAiHba,aAAe,WACb,IAAIQ,EAAQ,IAAIC,KACZC,EAAYF,EAAMG,UAAY,GAAK,IAAIH,EAAMG,UAAaH,EAAMG,UAChEzB,EAAOsB,EAAMI,cAAc,IAAIJ,EAAMK,WAAW,KAAOH,EAE3D,OADAb,QAAQC,IAAI,CAACZ,KAAKA,IACXA,GApHP,EAAKhC,MAAQ,CACXkC,SAAU,GACV9B,SAAU,CACRC,KAAM,GACNV,QAAS,EAAKmD,eACdjD,SAAS,EACTM,GAAI,OAGR,EAAK2C,aAAe,EAAKA,aAAac,KAAlB,gBAXT,E,sEAyHH,IAAD,OACDjC,EAAiBrB,KAAKN,MAAMkC,SAASiB,QAAO,SAAA/B,GAChD,OAAQA,EAAKgB,QAGTyB,EAAevD,KAAKN,MAAMkC,SAASiB,QAAO,SAAA/B,GAC9C,OAAsB,IAAdA,EAAKgB,OAAoC,IAAnBhB,EAAKkB,aAGrC,OACE,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC+E,EAAD,CACE5D,eAAgBI,KAAKyB,WACrB3B,SAAUE,KAAKN,MAAMI,WAGvB,kBAAC,EAAD,CAAgBY,MAAO6C,EAAaE,SACnCF,EAAajC,KAAI,SAACR,GACjB,OACE,kBAAC,EAAD,CACES,IAAKT,EAAKjB,GACViB,KAAMA,EACND,kBAAmB,EAAK4B,cACxBzB,gBAAiB,EAAK2B,WACtBzB,aAAc,EAAK4B,cAIzB,kBAAC,EAAD,CACEzB,eAAgBA,U,GAzJV3C,IAAMC,YCLxB+E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.75c8d626.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"jumbotron\">\n                <h1 className=\"display-4\">Things To Do Today</h1>\n                <p className=\"lead\">\"Organising is what you do before you do something, so that when you do it, it is not all mixed up.\"</p>\n                <p className=\"font-italic\">A.A. Milne</p>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\n\nclass NewTask extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskName: props.taskForm.name,\n            dueDate: props.taskForm.dueDate,\n            urgency: props.taskForm.urgency,\n            id: props.taskForm.id\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            taskName: props.taskForm.name,\n            dueDate: props.taskForm.dueDate,\n            urgency: props.taskForm.urgency,\n            id: props.taskForm.id\n        });\n    }\n    updateTaskName = (event) => {\n        this.setState({\n            taskName: event.target.value\n        });\n    }\n\n    updateDate = (event) => {\n        this.setState({\n            dueDate: event.target.value\n        });\n    }\n\n    updateUrgency = (event) => {\n        this.setState({\n            urgency: event.target.checked\n        })\n    }\n\n    addTask = () => {\n        if (this.state.taskName === \"\") {\n            return alert (\"Please add Task\")\n        }\n        if (this.state.dueDate === \"\") {\n            return alert (\"Please select a task due date\")\n        }\n        \n        this.props.addNewTaskFunc(\n            this.state.taskName,\n            this.state.dueDate,\n            this.state.urgency,\n            this.state.id\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6 mb-2\">\n                    <input type=\"text\" onChange={this.updateTaskName} value={this.state.taskName} className=\"form-control\" placeholder=\"Write Task Here\" />\n                </div>\n                <div className=\"col-8 col-md-3 mb-2\">\n                    <input type=\"date\" onChange={this.updateDate} value={this.state.dueDate} className=\"form-control\" />\n                </div>\n                <div className=\"col-4 col-md-1 mb-2\">\n                    <input \n                        type=\"checkbox\" \n                        onChange={this.updateUrgency} \n                        className=\"form-check-input\" \n                        id=\"taskUrgency\" \n                        name=\"taskUrgency\" \n                        checked={this.state.urgency}\n                        />\n                    <label className=\"form-check-label\" hfor=\"taskUrgency\">Is urgent</label>\n                </div>\n                <div className=\"col-12 col-md-2 mb-2\">\n                    <button onClick={this.addTask} \n                    className={\n                        this.state.id !==null ? \"btn btn-success btn-block\" : \"btn btn-primary btn-block\"\n                    }\n                    >\n                        {this.state.id !==null ? 'Update' : \"Add\"} \n                        </button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default NewTask;\n","import React from \"react\"\n\nclass ToDoListHeader extends React.Component {\n    state = {\n        status: \"Pending Tasks\",\n        numOfTasks: \"\"\n    };\n\n    updateNumOfTasks = (event) => {\n        this.setState({\n            numOfTasks: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-light cardToDoList mb-3\">\n                <div className=\"card-body\">\n                        <h3>To Do List <span className=\"badge badge-pill badge-primary float-right\">{this.props.count}</span></h3>\n                </div>\n            </div >\n        );\n    }   \n}    \n\nexport default ToDoListHeader;","import React from \"react\"\nimport './Task.css';\n\nclass Task extends React.Component {\n\n    taskDone = () => { \n\n       this.props.taskCompletedFunc(\n           this.props.task.id\n       ); \n    }\n\n    taskDelete = () => {\n\n        this.props.taskDeletedFunc(\n            this.props.task.id\n        )\n    }\n\n    taskEdit = () => {\n\n        this.props.taskEditFunc(\n            this.props.task.id\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"card bg-light cardToDoList mb-3\">\n                    <div className=\"card-body\">\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">\n                                <div className=\"row no-gutters\">\n                                    <div className=\"col-6 col-md-5 mb-3\">\n                                        {this.props.task.urgency && \n                                        <span className=\"importantIcon\"><i className=\"fas fa-star\"></i></span>\n                                        }\n                                        {this.props.task.name}\n                                    </div>\n                                    <div className=\"col-6 col-md-3 mb-3\">\n                                        {this.props.task.dueDate}\n                                    </div>\n                                    <div className=\"col-12 col-md-4\">\n                                        <div className=\"row no-gutters\">\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskDone}\n                                                    className=\"btn btn-success btn-sm btn-block small\">Done</button>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskEdit}\n                                                    className=\"btn btn-secondary btn-sm btn-block small\">Edit</button>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskDelete}\n                                                    className=\"btn btn-danger btn-sm btn-block small\">Delete</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div >\n            </div >\n        );\n    }\n}\n\nexport default Task;","import React from \"react\"\n\nclass DoneList extends React.Component {\n    render() {\n        const mytask = this.props.completedTasks;\n\n        return (\n                <div className=\"card text-white bg-success mb-3\">\n                    <div className=\"card-body\">\n                        <h3>Done List</h3>\n                        <ul className=\"list-group text-dark\">\n                            {mytask.map((task) => {\n                                return (\n                                    <li key={task.id} \n                                    className=\"list-group-item\">\n                                    {task.name}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n        )\n    }\n}\nexport default DoneList;\n","import React from 'react';\nimport uuid from \"uuid/v4\";\nimport Header from \"./Header\";\nimport AddNewTaskForm from \"./AddNewTaskForm\";\nimport ToDoListHeader from \"./ToDoListHeader\";\nimport Task from \"./Task\";\nimport DoneList from \"./DoneList\";\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      taskList: [],\n      taskForm: {\n        name: '',\n        dueDate: this.getTodaydate(),\n        urgency: false,\n        id: null\n      }\n    }\n    this.getTodaydate = this.getTodaydate.bind(this)\n  }\n\n\n  addNewTask = (name, date, urgency, id) => {\n    const myTaskList = this.state.taskList;\n    //create my task object\n    const newTask = {\n      name: name,\n      dueDate: date,\n      done: false,\n      urgency: urgency,\n      id: (id === null )? uuid() : id,\n      isEditing: false\n    }\n    //If new task\n    if(id === null){\n      const copyOfTasks = myTaskList;\n      copyOfTasks.slice();\n      //insert my new task\n      copyOfTasks.push(newTask);\n      this.setState({\n        taskList: copyOfTasks\n      })\n      this.resetForm();\n    }else{\n      //edit\n        console.log(myTaskList);\n      myTaskList.forEach(function(task){\n        //update my task\n        if(task.id === id){\n          task.name = newTask.name;\n          task.isEditing = false;\n          task.date = newTask.date;\n          task.urgency = newTask.urgency;\n        }\n      })\n      this.setState({\n        taskList: myTaskList\n      })\n      this.resetForm();\n    }\n  }\n\n  resetForm = () => {\n    const taskForm = {\n      name: '',\n      dueDate: this.getTodaydate(),\n      urgency: false,\n      id: null\n    }\n    this.setState({\n      taskForm: taskForm\n    })\n  }\n\n  completedTask = (id) => {\n    const taskCompleted = this.state.taskList;\n\n    taskCompleted.forEach(task => {\n      if (task.id === id) return task.done = true;\n    })\n\n    this.setState({\n      taskList: taskCompleted\n    })\n  }\n\n  deleteTask = (id) => {\n    const myTaskList = this.state.taskList;\n    const filteredTasks = myTaskList.filter(task => {\n      if (task.id === id) return false;\n      else return true;\n    })\n\n    this.setState({\n      taskList: filteredTasks\n    })\n  }\n\n  editTask = (id) => {\n    const myTaskList = this.state.taskList;\n    \n    let updateTask;\n    myTaskList.forEach(task => {\n      if (task.id === id) {\n        task.isEditing = true;\n        updateTask = {\n          name: task.name,\n          dueDate: task.dueDate,\n          urgency: task.urgency,\n          id: task.id\n        };\n      }\n    });\n\n    this.setState({\n      taskForm: updateTask,\n      taskList: myTaskList,\n    });\n  }\n\n  getTodaydate = () => {\n    let today = new Date();\n    let todayNum = (today.getDate() < 10)? '0'+today.getDate() :  today.getDate();\n    let date = today.getFullYear()+'-'+today.getMonth()+1 +'-'+todayNum;\n    console.log({date:date})\n    return date;\n  }\n\n  render() {\n    const completedTasks = this.state.taskList.filter(task => {\n      return (task.done)\n    });\n\n    const pendingTasks = this.state.taskList.filter(task => {\n      return (task.done !== true && task.isEditing === false)\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <AddNewTaskForm\n            addNewTaskFunc={this.addNewTask}\n            taskForm={this.state.taskForm}\n        \n          />\n          <ToDoListHeader count={pendingTasks.length} />\n          {pendingTasks.map((task) => {\n            return (\n              <Task\n                key={task.id}\n                task={task}\n                taskCompletedFunc={this.completedTask}\n                taskDeletedFunc={this.deleteTask}\n                taskEditFunc={this.editTask}\n              />\n            );\n          })}\n          <DoneList\n            completedTasks={completedTasks}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}