{"version":3,"sources":["Header.js","AddTask.js","ToDoListHeader.js","Task.js","DoneList.js","App.js","index.js"],"names":["Header","className","React","Component","AddTask","props","updateTaskText","event","setState","task_Text","target","value","updateDate","due_Date","updateUrgency","urgency","checked","addTask","state","alertify","alert","addNewTaskFunc","updateEditedTask","updateEditedTaskFunc","taskId","taskForm","nextProps","this","type","onChange","placeholder","id","name","hfor","onClick","ToDoListHeader","status","numOfTasks","updateNumOfTasks","count","Task","taskDone","taskCompletedFunc","task","taskDelete","taskDeletedFunc","taskEdit","taskEditFunc","moment","format","DoneList","mytask","completedTasks","map","key","App","addNewTask","date","myTaskList","taskList","newTask","completed","axios","post","then","response","copyOfTasks","slice","push","data","resetForm","catch","err","console","log","getTodaydate","success","completedTask","parameters","put","taskCompleted","forEach","item","deleteTask","myapp","confirm","deleteTaskConfirm","delete","filteredTasks","filter","error","editTask","split","scrollToId","editData","taskUpdate","today","Date","todayNum","getDate","getFullYear","getMonth","element","document","getElementById","scrollIntoView","bind","get","tasks","todos","pendingTasks","length","ReactDOM","render"],"mappings":"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","file":"static/js/main.ed2e9c4a.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"jumbotron py-4 mt-2\">\n                <h1 className=\"display-5\">Things To Do Today</h1>\n                <div className=\"d-none d-md-block\">\n                    <p className=\"lead\">\"Organising is what you do before you do something, so that when you do it, it is not all mixed up.\"</p>\n                    <p className=\"font-italic\">A.A. Milne</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport alertify from \"alertifyjs\";\n\nclass AddTask extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            task_Text: props.taskForm.task_Text,\n            due_Date: props.taskForm.due_Date,\n            urgency: props.taskForm.urgency,\n            taskId: props.taskId\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            task_Text: nextProps.taskForm.task_Text,\n            due_Date: nextProps.taskForm.due_Date,\n            urgency: nextProps.taskForm.urgency,\n            taskId: nextProps.taskId\n        });\n    }\n\n    updateTaskText = (event) => {\n        this.setState({\n            task_Text: event.target.value\n        });\n    }\n\n    updateDate = (event) => {\n        this.setState({\n            due_Date: event.target.value\n        });\n    }\n\n    updateUrgency = (event) => {\n        this.setState({\n            urgency: event.target.checked\n        })\n    }\n\n    addTask = () => {\n\n        if (this.state.task_Text === \"\") {\n            return alertify\n            .alert(\"Please input a task.\")\n        }\n        if (this.state.due_Date === \"\") {\n            return alertify\n            .alert(\"Please input a task due date.\")\n        }\n\n        this.props.addNewTaskFunc(\n            this.state.task_Text,\n            this.state.due_Date,\n            this.state.urgency\n        );\n    }\n\n    updateEditedTask = () => {\n        this.props.updateEditedTaskFunc(\n            this.state.task_Text,\n            this.state.due_Date,\n            this.state.urgency,\n            this.state.taskId\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6 mb-2\">\n                    <input type=\"text\" onChange={this.updateTaskText} value={this.state.task_Text} className=\"form-control\" placeholder=\"Write Task Here\" />\n                </div>\n                <div className=\"col-8 col-md-3 mb-2\">\n                    <input type=\"date\" onChange={this.updateDate} value={this.state.due_Date} className=\"form-control\" />\n                </div>\n                <div className=\"col-4 col-md-1 mb-2\">\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.updateUrgency}\n                        className=\"form-check-input\"\n                        id=\"taskUrgency\"\n                        name=\"taskUrgency\"\n                        checked={this.state.urgency}\n                    />\n                    <label className=\"form-check-label\" hfor=\"taskUrgency\">Is urgent</label>\n                </div>\n                <div className=\"col-12 col-md-2 mb-2\">\n                    {this.state.taskId &&\n                        <button onClick={() => this.updateEditedTask()}\n                            className=\"btn btn-success btn-block\">\n                            Update\n                            </button>\n                    }\n\n                    {!this.state.taskId &&\n                        <button onClick={() => this.addTask()}\n                            className=\"btn btn-primary btn-block\">\n                            Add\n                            </button>\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default AddTask;\n","import React from \"react\"\n\nclass ToDoListHeader extends React.Component {\n    state = {\n        status: \"Pending Tasks\",\n        numOfTasks: \"\"\n    };\n\n    updateNumOfTasks = (event) => {\n        this.setState({\n            numOfTasks: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-light cardToDoList mb-3\">\n                <div className=\"card-body\">\n                        <h3>To Do List <span className=\"badge badge-pill badge-primary float-right\">{this.props.count}</span></h3>\n                </div>\n            </div >\n        );\n    }   \n}    \n\nexport default ToDoListHeader;","import React from \"react\";\nimport moment from \"moment\";\nimport './Task.css';\n\nclass Task extends React.Component {\n\n    taskDone = () => { \n\n       this.props.taskCompletedFunc(\n           this.props.task\n       ); \n    }\n\n    taskDelete = () => {\n\n        this.props.taskDeletedFunc(\n            this.props.task.taskId\n        )\n    }\n\n    taskEdit = () => {\n        \n        this.props.taskEditFunc(\n            this.props.task\n        ) \n    }\n   \n\n    render() {\n        return (\n            <div>\n                <div className=\"card bg-light cardToDoList mb-3\">\n                    <div className=\"card-body\">\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">\n                                <div className=\"row no-gutters\">\n                                    <div className=\"col-6 col-md-5 mb-3\">\n                                        {this.props.task.urgency && \n                                        <span className=\"importantIcon\"><i className=\"fas fa-star\"></i></span>\n                                        }\n                                        {this.props.task.task_Text}\n                                    </div>\n                                    <div className=\"col-6 col-md-3 mb-3 text-right\">\n                                        {moment(this.props.task.due_Date).format(\"DD/MM/YYYY\")}\n                                    </div>\n                                    <div className=\"col-12 col-md-4\">\n                                        <div className=\"row \">\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskDone}\n                                                    className=\"btn btn-success btn-sm btn-block small\">Done</button>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskEdit} \n                                                    className=\"btn btn-secondary btn-sm btn-block small\">Edit</button>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <button type=\"button\" onClick={this.taskDelete}\n                                                    className=\"btn btn-danger btn-sm btn-block small\">Delete</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div >\n            </div >\n        );\n    }\n}\n\nexport default Task;","import React from \"react\"\n\nclass DoneList extends React.Component {\n    render() {\n        const mytask = this.props.completedTasks;\n\n        return (\n                <div className=\"card text-white bg-success mb-3\">\n                    <div className=\"card-body\">\n                        <h3>Done List</h3>\n                        <ul className=\"list-group text-dark\">\n                            {mytask.map((task) => {\n                                return (\n                                    <li key={task.taskId} \n                                    className=\"list-group-item\">\n                                    {task.task_Text}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n        )\n    }\n}\nexport default DoneList;\n","import React from 'react';\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport AddTask from \"./AddTask\";\nimport ToDoListHeader from \"./ToDoListHeader\";\nimport Task from \"./Task\";\nimport DoneList from \"./DoneList\";\n\nimport alertify from 'alertifyjs';\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      taskList: [],\n      taskForm: {\n        task_Text: '',\n        due_Date: this.getTodaydate(),\n        completed: false,\n        urgency: false\n      },\n      taskId: null\n    }\n    this.getTodaydate = this.getTodaydate.bind(this)\n  }\n  componentDidMount() {\n    axios.get(\"https://ek43k7gjoj.execute-api.eu-west-1.amazonaws.com/dev/tasks\")\n      .then((response) => {\n        const tasks = response.data.todos;\n        this.setState({\n          taskList: tasks\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  addNewTask = (name, date, urgency) => {\n    const myTaskList = this.state.taskList;\n    const newTask = {\n      task_Text: name,\n      due_Date: date,\n      completed: false,\n      urgency: urgency\n    }\n\n    axios.post(\"https://ek43k7gjoj.execute-api.eu-west-1.amazonaws.com/dev/tasks\", newTask)\n      .then((response) => {\n        const copyOfTasks = myTaskList;\n        copyOfTasks.slice();\n        copyOfTasks.push(response.data.newTask);\n\n        this.setState({\n          taskList: copyOfTasks\n        });\n\n        this.resetForm()\n\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  resetForm = () => {\n    const taskForm = {\n      task_Text: '',\n      due_Date: this.getTodaydate(),\n      completed: false,\n      urgency: false\n    }\n\n    this.setState({\n      taskForm: taskForm,\n      taskId: null\n    })\n    alertify.success('Task added.');\n  }\n\n  completedTask = (task) => {\n\n    const parameters = { completed: !task.completed };\n\n    axios.put(`https://ek43k7gjoj.execute-api.eu-west-1.amazonaws.com/dev/tasks/${task.taskId}`, parameters)\n      .catch((err) => {\n        console.log(err)\n      })\n      .then((response) => {\n\n        const taskCompleted = this.state.taskList;\n        taskCompleted.forEach(item => {\n          if (item.taskId === task.taskId) return item.completed = parameters.completed;\n        });\n        this.setState({\n          taskList: taskCompleted\n        })\n        alertify.success('Task completed.');\n      })\n  }\n\n  deleteTask = (id) => {\n    const myapp = this;\n    alertify.confirm(\"Are you sure you want to delete this task?\",function(){\n      myapp.deleteTaskConfirm(id)\n    });\n  }\n\n  deleteTaskConfirm = (id) => {\n    axios.delete(`https://ek43k7gjoj.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`)\n      .catch((err) => {\n        console.log(err);\n      })\n      .then((response) => {\n        const myTaskList = this.state.taskList;\n        const filteredTasks = myTaskList.filter(task => {\n          return task.taskId !== id\n        })\n\n        this.setState({\n          taskList: filteredTasks\n        })\n        alertify.error('Task deleted');\n      });\n  }\n\n  \n\n  editTask = (task) => {\n\n    let editTask = {\n      task_Text: task.task_Text,\n      completed: false,\n      due_Date: task.due_Date.split(\"T\")[0],\n      urgency: task.urgency,\n    }\n    this.setState({\n      taskForm: editTask,\n      taskId: task.taskId\n    });\n\n    this.scrollToId('myTaskForm');\n\n  }\n\n  updateEditedTask = (task_Text, due_Date, urgency, taskId) => {\n    const editData = {\n      task_Text: task_Text,\n      due_Date: due_Date,\n      urgency: urgency,\n      taskId: taskId\n    };\n\n    axios.put(`https://ek43k7gjoj.execute-api.eu-west-1.amazonaws.com/dev/tasks/${taskId}`, editData)\n      .catch((err) => {\n        console.log(err)\n      })\n      .then((response) => {\n        //update my tasklist\n        const taskUpdate = this.state.taskList\n        taskUpdate.forEach(task => {\n          if (task.taskId === taskId) {\n            task.task_Text = task_Text;\n            task.due_Date = due_Date;\n            task.urgency = urgency;\n            return\n          }\n        })\n        this.setState({\n          taskList: taskUpdate\n        });\n        this.resetForm()\n        alertify.success('Task updated.');\n      });\n  }\n\n  getTodaydate = () => {\n    let today = new Date();\n    let todayNum = (today.getDate() < 10) ? '0' + today.getDate() : today.getDate();\n    let date = today.getFullYear() + '-' + today.getMonth() + 1 + '-' + todayNum;\n    return date;\n  }\n\n  scrollToId = (element) => {\n    var elmnt = document.getElementById(element);\n    elmnt.scrollIntoView(true);\n  }\n\n  render() {\n    const completedTasks = this.state.taskList.filter(task => {\n      return task.completed === true\n    });\n\n    const pendingTasks = this.state.taskList.filter(task => {\n      return task.completed === false\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <div id=\"myTaskForm\" className=\"mb-5\"></div>\n          <AddTask\n            addNewTaskFunc={this.addNewTask}\n            taskForm={this.state.taskForm}\n            taskId={this.state.taskId}\n            updateEditedTaskFunc={this.updateEditedTask}\n          />\n          <ToDoListHeader count={pendingTasks.length} />\n          {pendingTasks.map((task) => {\n            return (\n              <Task\n                key={task.taskId}\n                task={task}\n                taskCompletedFunc={this.completedTask}\n                taskDeletedFunc={this.deleteTask}\n                taskEditFunc={this.editTask}\n              />\n            );\n          })}\n          <DoneList\n            completedTasks={completedTasks}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}